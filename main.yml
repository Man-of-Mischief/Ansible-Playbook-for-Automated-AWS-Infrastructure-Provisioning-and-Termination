---
- name: "Creating AWS infra"
  hosts: localhost
  vars:
    region: "ap-south-1"
    project: "zomato"
    env: "prod"
  vars_files:
    - keys.yml
  tasks:

    - name: "Creating keypair and saving in local"
      amazon.aws.ec2_key:
        region: "{{ region }}"
        access_key: "{{ access_key }}"
        secret_key: "{{ secret_key }}"
        name: "{{ project }}-{{ env }}"
        state: present
      register: key_value
      tags: ['infra','never']

    - name: "Saving key to local"
      when: key_value.changed == true
      copy:
        content: "{{ key_value.key.private_key }}"
        dest: "{{ project }}-{{ env }}.pem"
        mode: 0400
      tags: ['infra','never']

    - name: "Security Group Creation"
      amazon.aws.ec2_security_group:
        region: "{{ region }}"
        access_key: "{{ access_key }}"
        secret_key: "{{ secret_key }}"
        name: "{{ project }}-{{ env }}-webserver"
        description: "{{ project }}-{{ env }}-webserver"
        tags:
          Name: "{{ project }}-{{ env }}-webserver"
          project: "{{ project }}"
          env: "{{ env }}"
        rules:
          - proto: tcp
            from_port: 22
            to_port: 22
            cidr_ip: 0.0.0.0/0

          - proto: tcp
            from_port: 80
            to_port: 80
            cidr_ip: 0.0.0.0/0

          - proto: tcp
            from_port: 443
            to_port: 443
            cidr_ip: 0.0.0.0/0

      register: sg_status
      tags: ['infra','never']

    - name: "Instance Creation"
      amazon.aws.ec2_instance:
        region: "{{ region }}"
        access_key: "{{ access_key }}"
        secret_key: "{{ secret_key }}"
        name: "{{ project }}-{{ env }}-webserver"
        key_name: "{{ key_value.key.name }}"
        instance_type: t2.micro
        exact_count: 4
        filters:
          "tag:Name": "{{ project }}-{{ env }}-webserver"
          "tag:project": "{{ project }}"
          "tag:env": "{{ env }}"
        security_groups:
          - "{{ sg_status.group_id}}"
        image_id: "ami-03b31136fc503b84a"
        tags:
          Name: "{{ project }}-{{ env }}-webserver"
          project: "{{ project }}"
          env: "{{ env }}"
      register: ec2_status
      tags: ['infra','never']

    - name: "Gathering instance information"
      amazon.aws.ec2_instance_info:
        access_key: "{{ access_key }}"
        secret_key: "{{ secret_key }}"
        region: "{{ region }}"
        filters:
          "tag:Name": "{{ project }}-{{env}}-webserver"
          "tag:project": "{{ project }}"
          "tag:env": "{{ env }}"
      register: zomatos
      tags: ['infra','provision','never']

    - name: "Creating dynamic inventory"
      add_host:
        groups: "zomato_prod_servers"
        hostname: "{{ item.private_ip_address }}"
        ansible_ssh_user: "ec2-user"
        ansible_host: "{{ item.private_ip_address }}"
        ansible_port: "22"
        ansible_ssh_private_key_file: "zomato-prod.pem"
        ansible_ssh_common_args: "-o StrictHostKeyChecking=no"
      with_items: "{{ zomatos.instances }}"
      register: inventory
      tags: ['infra','provision','never']

    - name: "Store ec2_status result"
      set_fact:
        ec2_status_result: "{{ ec2_status }}"
      tags: ['infra','provision','never']

- name: "Hosting on zomato_prod_servers"
  become: yes
  hosts: zomato_prod_servers
  gather_facts: no
  vars:
    packages:
      - httpd
      - php
    services:
      - httpd
      - php-fpm
    owner: "apache"
    group: "apache"
  tasks:

    - name: "Pause for 1 minute if ec2_status.changed is true"
      when: hostvars['localhost'].ec2_status_result.changed == true
      pause:
        minutes: 1
      tags: ['provision','never']

    - name: "Installing Packages"
      yum:
        name: "{{ packages }}"
        state: present
      register: package_status
      tags: ['provision','never']

    - name: "Restarting/Enabling services"
      when: package_status.changed == true
      service:
        name: "{{ item }}"
        state: restarted
      with_items: "{{ services }}"
      tags: ['provision','never']

    - name: "Copying items to docroot"
      copy:
        src: "./index.html"
        dest: "/var/www/html/"
        owner: "apache"
        group: "apache"
      tags: ['provision','never']
